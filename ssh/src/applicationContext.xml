<?xml version="1.0" encoding="UTF-8"?>
<!--suppress ALL -->
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"
        default-autowire="byName">


    <!-- 开启注解扫描  扫包-->
    <context:component-scan base-package="main.com.imooc">
       <!-- <context:include-filter type="regex" expression=".*Stub.Repository"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>-->
    </context:component-scan>

    <!-- 配置Action层的类 protoype 多类模式 singtype 单利模式-->
    <!--产品管理Action-->
    <bean id="productAction" class="main.com.imooc.action.ProductAction" scope="prototype">
        <!-- 手动注入 -->
        <property name="productService" ref="productService"/>
    </bean>
    <!--员工管理Action-->
    <bean id="employeeAction" class="main.com.imooc.action.EmployeeAction" scope="prototype">
        <property name="employeeService" ref="employeeService"/>
        <property name="departmentService" ref="departmentService"/>
    </bean>
    <!--部门管理Action-->
    <bean id="departmentAction" class="main.com.imooc.action.DepartmentAction" scope="prototype">
        <property name="departmentService" ref="departmentService"/>
    </bean>
    <!--验证码Action-->
    <bean id="createImageAction" class="main.com.imooc.action.CreateImageAction"></bean>
    <!-- 配置业务层的类-->
    <!--产品管理业务层-->
    <bean id="productService" class="main.com.imooc.service.ProductService">
        <property name="productDao" ref="productDao"/>
    </bean>
    <!--员工管理业务层-->
    <bean id="employeeService" class="main.com.imooc.service.Impl.EmployeeServiceImpl">
        <property name="employeeDao" ref="employeeDao"/>
    </bean>
    <!--部门管理业务层-->
    <bean id="departmentService" class="main.com.imooc.service.Impl.DepartmentServiceImpl">
        <property name="departmentDao" ref="departmentDao"/>
    </bean>

    <!-- 配置DAO层的类-->
    <bean id="productDao" class="main.com.imooc.dao.ProductDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--员工管理Dao-->
    <bean id="employeeDao" class="main.com.imooc.dao.Impl.EmployeeDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--部门管理业务层Dao-->
    <bean id="departmentDao" class="main.com.imooc.dao.Impl.DepartmentDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 配置事物管理器-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 开启注解事物-->
   <!--<tx:annotation-dirven transaction-manager="transactionManager"/>-->

    <!-- 配置连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- 引入外部属性的文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 配置Hibernate的相关属性-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <!-- 注入连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置Hibernate的属性-->
        <property name="hibernateProperties" >
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <!-- 加载Hibernate中的映射文件-->
        <property name="mappingResources">
            <list>
                <value>main/com/imooc/entity/Product.hbm.xml</value>
                <value>main/com/imooc/entity/Department.hbm.xml</value>
                <value>main/com/imooc/entity/Employee.hbm.xml</value>
            </list>
        </property>
    </bean>
    <!-- 测试-->
    <bean id="moocApplicationContext" class="main.com.imooc.utils.spring.aware.MoocApplicationContext"/>
    <bean id="moocBeanName" class="main.com.imooc.utils.spring.aware.MoocBeanName"/>

    <bean id="autoWiringService" class="main.com.imooc.utils.spring.autowiring.AutoWiringService">
    </bean>
    <bean id="autoWiringDAO" class="main.com.imooc.utils.spring.autowiring.AutoWiringDAO"/>
    <bean id="moocResource" class="main.com.imooc.utils.spring.resource.MoocResource"/>
    <bean id="beanScope" class="main.com.imooc.utils.spring.bean.BeanScope"/>
    <bean id="beanLifeCycle" class="main.com.imooc.utils.spring.lifecycle.BeanLifeCycle" init-method="start" destroy-method="stop"/>
</beans>